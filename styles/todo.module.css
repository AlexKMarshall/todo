.center {
  box-sizing: content-box;
  max-width: var(--measure);
  margin-left: auto;
  margin-right: auto;
}

.cover {
  --gutter: var(--s2);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  padding: var(--gutter);
}

.cover > * {
  margin-top: var(--gutter);
  margin-bottom: var(--gutter);
}

.cover > :first-child:not(.appContent) {
  margin-top: 0;
}

.cover > :last-child:not(.appContent) {
  margin-bottom: 0;
}

.cover > .appContent {
  margin-top: auto;
  margin-bottom: auto;
}

.appContent {
  --gutter: var(--s1);
  flex-grow: 1;
  height: 0; /* otherwise 1fr grid row doesn't grow in chrome */
  display: grid;
  width: 100%;
  grid-template-columns: minmax(max-content, 1fr) auto minmax(max-content, 1fr);
  grid-template-rows: auto 1fr auto auto;
  grid-template-areas:
    'input input input'
    'list list list'
    'count filters clear'
    'filters-mobile filters-mobile filters-mobile';
}

.appContent > * {
  background-color: var(--main-background-color);
}

.todoForm {
  grid-area: input;
  display: flex;
  margin-bottom: var(--gutter);
}

.todoInput {
  flex-grow: 1;
  width: 0; /* override browser min-width on input */
}

.todoList {
  grid-area: list;
  margin: 0;
  padding: 0;
}

.todoItem {
  width: 100%;
  padding: var(--s0) var(--s1);
  display: flex;
  align-items: center;
  letter-spacing: -0.01em;
}

.deleteTodo {
  margin-left: auto;
}

.emptyMessage {
  grid-area: list;
}

.itemsCount {
  grid-area: count;
}

.filterButtons {
  grid-area: filters-mobile;
  margin-top: var(--gutter);
  display: flex;
  justify-content: center;
}

.link {
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
}

.link:focus {
  outline: 1px solid;
}

.link[aria-pressed='true'] {
  color: var(--primary-blue);
}

@media (min-width: 800px) {
  .filter-buttons {
    grid-area: filters;
    margin-top: 0;
  }
}

.clearCompleted {
  grid-area: clear;
}
